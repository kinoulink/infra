user www-data;
worker_processes 1;
pid /run/nginx.pid;
daemon off;

events
{
  worker_connections 768;
}

http
{
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  access_log off;
  error_log /dev/stderr;

	client_max_body_size 999M;

	gzip on;
    gzip_disable "msie6";

  {{ range $host, $containers := groupByMulti $ "Env.VIRTUAL_HOST" "," }}

  	{{ $default_host := or ($.Env.DEFAULT_HOST) "" }}
  	{{ $default_server := index (dict $host "" $default_host "default_server") $host }}

  	{{/* Get the VIRTUAL_PROTO defined by containers w/ the same vhost, falling back to "http" */}}
  	{{ $proto := or (first (groupByKeys $containers "Env.VIRTUAL_PROTO")) "http" }}

    upstream {{ $host }} {

    {{ range $index, $value := $containers }}

        {{ $addrLen := len $value.Addresses }}
        {{ $network := index $value.Networks 0 }}

        {{/* If only 1 port exposed, use that */}}
        {{ if eq $addrLen 1 }}
            {{ with $address := index $value.Addresses 0 }}
                # {{$value.Name}}
                server {{ $network.IP }}:{{ $address.Port }};
            {{ end }}

        {{/* If more than one port exposed, use the one matching VIRTUAL_PORT env var */}}
        {{ else if $value.Env.VIRTUAL_PORT }}
            {{ range $i, $address := $value.Addresses }}
                {{ if eq $address.Port $value.Env.VIRTUAL_PORT }}
                # {{$value.Name}}
                server {{ $network.IP }}:{{ $address.Port }};
                {{ end }}
            {{ end }}

        {{/* Else default to standard web port 80 */}}
        {{ else }}
            {{ range $i, $address := $value.Addresses }}
                {{ if eq $address.Port "80" }}
                # {{$value.Name}}
                server {{ $network.IP }}:{{ $address.Port }};
                {{ end }}
            {{ end }}
        {{ end }}
    {{ end }}
    }

	server {
    	server_name {{ $host }}.*;
    	listen 80 {{ $default_server }};

    	location / {
    		proxy_pass {{ trim $proto }}://{{ trim $host }};
    		{{ if (exists (printf "/etc/nginx/htpasswd/%s" $host)) }}
    		auth_basic	"Restricted {{ $host }}";
    		auth_basic_user_file	{{ (printf "/etc/nginx/htpasswd/%s" $host) }};
    		{{ end }}
    	}
    }

{{end}}


}